2023-11-10 08:13:59 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:13:59 GMT+0700 (Indochina Time)","process":{"pid":92540,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59195392,"heapTotal":22200320,"heapUsed":14615864,"external":2776360,"arrayBuffers":123565}},"os":{"loadavg":[4.5849609375,3.87109375,3.59326171875],"uptime":724714},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:13:59"}
2023-11-10 08:18:16 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:18:16 GMT+0700 (Indochina Time)","process":{"pid":92678,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":60243968,"heapTotal":22462464,"heapUsed":14462112,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[3.36962890625,4.2216796875,3.85986328125],"uptime":724971},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:18:16"}
2023-11-10 08:18:29 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:18:29 GMT+0700 (Indochina Time)","process":{"pid":92689,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59097088,"heapTotal":22200320,"heapUsed":14469616,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[2.99853515625,4.11474609375,3.82568359375],"uptime":724984},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:18:29"}
2023-11-10 08:19:00 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:19:00 GMT+0700 (Indochina Time)","process":{"pid":92707,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59162624,"heapTotal":21938176,"heapUsed":14520320,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[2.34423828125,3.8310546875,3.7333984375],"uptime":725015},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:19:00"}
2023-11-10 08:19:14 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:19:14 GMT+0700 (Indochina Time)","process":{"pid":92722,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59703296,"heapTotal":21676032,"heapUsed":14485600,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[2.5439453125,3.8203125,3.73046875],"uptime":725029},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:19:14"}
2023-11-10 08:19:18 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:19:18 GMT+0700 (Indochina Time)","process":{"pid":92728,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59736064,"heapTotal":22200320,"heapUsed":14439200,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[3.380859375,3.97265625,3.78466796875],"uptime":725033},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:19:18"}
2023-11-10 08:20:16 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:20:16 GMT+0700 (Indochina Time)","process":{"pid":92756,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":60080128,"heapTotal":21938176,"heapUsed":14370312,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[2.63330078125,3.677734375,3.68701171875],"uptime":725091},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:20:16"}
2023-11-10 08:21:19 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:21:19 GMT+0700 (Indochina Time)","process":{"pid":92792,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59408384,"heapTotal":22462464,"heapUsed":14481768,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[2.2119140625,3.39306640625,3.57958984375],"uptime":725154},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:21:19"}
2023-11-10 08:22:06 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:22:06 GMT+0700 (Indochina Time)","process":{"pid":92810,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":61014016,"heapTotal":21938176,"heapUsed":14269656,"external":2776360,"arrayBuffers":98776}},"os":{"loadavg":[3.2919921875,3.43798828125,3.58056640625],"uptime":725201},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:22:06"}
2023-11-10 08:22:10 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:22:10 GMT+0700 (Indochina Time)","process":{"pid":92820,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":60637184,"heapTotal":21938176,"heapUsed":14323152,"external":2776360,"arrayBuffers":106968}},"os":{"loadavg":[3.1884765625,3.4140625,3.5712890625],"uptime":725205},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:22:10"}
2023-11-10 08:22:27 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:22:27 GMT+0700 (Indochina Time)","process":{"pid":92833,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59129856,"heapTotal":21938176,"heapUsed":14384832,"external":2784552,"arrayBuffers":98776}},"os":{"loadavg":[3.484375,3.4599609375,3.58447265625],"uptime":725222},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:22:27"}
2023-11-10 08:22:32 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:22:32 GMT+0700 (Indochina Time)","process":{"pid":92839,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59473920,"heapTotal":22462464,"heapUsed":14060752,"external":2761113,"arrayBuffers":91266}},"os":{"loadavg":[3.365234375,3.435546875,3.57470703125],"uptime":725227},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:22:32"}
2023-11-10 08:22:39 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:22:39 GMT+0700 (Indochina Time)","process":{"pid":92847,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58081280,"heapTotal":22200320,"heapUsed":14243256,"external":2761113,"arrayBuffers":91266}},"os":{"loadavg":[3.3359375,3.42822265625,3.5712890625],"uptime":725234},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:22:39"}
2023-11-10 08:22:56 error: uncaughtException: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by "exports" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json
    at new NodeError (node:internal/errors:372:5)
    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)
    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)
    at resolveExports (node:internal/modules/cjs/loader:482:36)
    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14) 
	Stack: {"error":{"stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","message":"Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json","code":"ERR_PACKAGE_PATH_NOT_EXPORTED"},"level":"error","message":"uncaughtException: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\nError [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","stack":"Error [ERR_PACKAGE_PATH_NOT_EXPORTED]: Package subpath './v1' is not defined by \"exports\" in /Users/seo/Desktop/interview-home-work/api/node_modules/uuid/package.json\n    at new NodeError (node:internal/errors:372:5)\n    at throwExportsNotFound (node:internal/modules/esm/resolve:472:9)\n    at packageExportsResolve (node:internal/modules/esm/resolve:753:3)\n    at resolveExports (node:internal/modules/cjs/loader:482:36)\n    at Function.Module._findPath (node:internal/modules/cjs/loader:522:31)\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:919:27)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js:3:14)","exception":true,"date":"Fri Nov 10 2023 08:22:56 GMT+0700 (Indochina Time)","process":{"pid":92862,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58294272,"heapTotal":22462464,"heapUsed":14047024,"external":2761113,"arrayBuffers":91266}},"os":{"loadavg":[3.41748046875,3.4462890625,3.57421875],"uptime":725251},"trace":[{"column":5,"file":"node:internal/errors","function":"new NodeError","line":372,"method":null,"native":false},{"column":9,"file":"node:internal/modules/esm/resolve","function":"throwExportsNotFound","line":472,"method":null,"native":false},{"column":3,"file":"node:internal/modules/esm/resolve","function":"packageExportsResolve","line":753,"method":null,"native":false},{"column":36,"file":"node:internal/modules/cjs/loader","function":"resolveExports","line":482,"method":null,"native":false},{"column":31,"file":"node:internal/modules/cjs/loader","function":"Module._findPath","line":522,"method":"_findPath","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":919,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.service.js","function":null,"line":3,"method":null,"native":false}],"timestamp":"2023-11-10 08:22:56"}
2023-11-10 08:25:00 error: uncaughtException: validate is not a function
TypeError: validate is not a function
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20) 
	Stack: {"error":{"stack":"TypeError: validate is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20)","message":"validate is not a function"},"level":"error","message":"uncaughtException: validate is not a function\nTypeError: validate is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20)","stack":"TypeError: validate is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20)","exception":true,"date":"Fri Nov 10 2023 08:25:00 GMT+0700 (Indochina Time)","process":{"pid":92977,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59441152,"heapTotal":22462464,"heapUsed":14445320,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[3.72216796875,3.61962890625,3.6279296875],"uptime":725375},"trace":[{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":22,"file":"/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","function":null,"line":14,"method":null,"native":false},{"column":null,"file":null,"function":"Array.forEach","line":null,"method":"forEach","native":false},{"column":20,"file":"/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","function":null,"line":13,"method":null,"native":false}],"timestamp":"2023-11-10 08:25:00"}
2023-11-10 08:25:08 error: uncaughtException: validate is not a function
TypeError: validate is not a function
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22
    at Array.forEach (<anonymous>)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20) 
	Stack: {"error":{"stack":"TypeError: validate is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20)","message":"validate is not a function"},"level":"error","message":"uncaughtException: validate is not a function\nTypeError: validate is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20)","stack":"TypeError: validate is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at /Users/seo/Desktop/interview-home-work/api/app/index.routes.js:14:22\n    at Array.forEach (<anonymous>)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/index.routes.js:13:20)","exception":true,"date":"Fri Nov 10 2023 08:25:08 GMT+0700 (Indochina Time)","process":{"pid":92983,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59457536,"heapTotal":22462464,"heapUsed":14363512,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[3.2294921875,3.51611328125,3.5908203125],"uptime":725383},"trace":[{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":22,"file":"/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","function":null,"line":14,"method":null,"native":false},{"column":null,"file":null,"function":"Array.forEach","line":null,"method":"forEach","native":false},{"column":20,"file":"/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","function":null,"line":13,"method":null,"native":false}],"timestamp":"2023-11-10 08:25:08"}
2023-11-10 08:26:56 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:26:56 GMT+0700 (Indochina Time)","process":{"pid":93040,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58605568,"heapTotal":22462464,"heapUsed":14572472,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[3.3876953125,3.48193359375,3.5634765625],"uptime":725491},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:26:56"}
2023-11-10 08:27:05 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:27:05 GMT+0700 (Indochina Time)","process":{"pid":93052,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58064896,"heapTotal":22462464,"heapUsed":14526648,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[3.1162109375,3.423828125,3.54248046875],"uptime":725500},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:27:05"}
2023-11-10 08:28:09 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:28:09 GMT+0700 (Indochina Time)","process":{"pid":93074,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58769408,"heapTotal":21938176,"heapUsed":14515200,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[5.20703125,3.89697265625,3.705078125],"uptime":725564},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:28:09"}
2023-11-10 08:35:24 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:35:24 GMT+0700 (Indochina Time)","process":{"pid":93287,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59473920,"heapTotal":22462464,"heapUsed":14624024,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[4.0439453125,3.83984375,3.703125],"uptime":725999},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:35:24"}
2023-11-10 08:35:27 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:35:27 GMT+0700 (Indochina Time)","process":{"pid":93295,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58605568,"heapTotal":22462464,"heapUsed":14452984,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[5.8017578125,4.20751953125,3.83349609375],"uptime":726002},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:35:27"}
2023-11-10 08:35:31 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:35:31 GMT+0700 (Indochina Time)","process":{"pid":93305,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":61964288,"heapTotal":22200320,"heapUsed":14532384,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[5.8017578125,4.20751953125,3.83349609375],"uptime":726006},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:35:31"}
2023-11-10 08:35:39 error: uncaughtException: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
ValidationError: {
  "body" [31m[1][0m: {
    "refreshToken": {
      "type": "string",
      "$_root": {
        "_types": {},
        "alternatives": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "any": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "array": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "boolean": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "date": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "function": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "link": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "number": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "object": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "string": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "symbol": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "binary": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "allow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "custom": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "disallow": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "equal": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "exist": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "forbidden": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "invalid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "not": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "only": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "optional": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "options": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "prefs": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "preferences": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "required": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "strip": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "valid": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "when": function (...args) {\n\n            return this.any()[method](...args);\n        },
        "ValidationError": "[class extends Error {\n\n    constructor(message, details, original) {\n\n        super(message);\n        this._original = original;\n        this.details = details;\n    }\n\n    static isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }\n}]",
        "version": "17.11.0",
        "cache": {
          "provision": "[provision(options) {\n\n        return new internals.Cache(options);\n    }]"
        },
        "assert": "[assert(value, schema, ...args /* [message], [options] */) {\n\n        internals.assert(value, schema, true, args);\n    }]",
        "attempt": "[attempt(value, schema, ...args /* [message], [options] */) {\n\n        return internals.assert(value, schema, false, args);\n    }]",
        "build": "[build(desc) {\n\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\n        return Manifest.build(this, desc);\n    }]",
        "checkPreferences": "[checkPreferences(prefs) {\n\n        Common.checkPreferences(prefs);\n    }]",
        "compile": "[compile(schema, options) {\n\n        return Compile.compile(this, schema, options);\n    }]",
        "defaults": "[defaults(modifier) {\n\n        Assert(typeof modifier === 'function', 'modifier must be a function');\n\n        const joi = Object.assign({}, this);\n        for (const type of joi._types) {\n            const schema = modifier(joi[type]());\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\n\n            joi[type] = function (...args) {\n\n                return internals.generate(this, schema, args);\n            };\n        }\n\n        return joi;\n    }]",
        "expression": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "extend": "[extend(...extensions) {\n\n        Common.verifyFlat(extensions, 'extend');\n\n        Schemas = Schemas || require('./schemas');\n\n        Assert(extensions.length, 'You need to provide at least one extension');\n        this.assert(extensions, Schemas.extensions);\n\n        const joi = Object.assign({}, this);\n        joi._types = new Set(joi._types);\n\n        for (let extension of extensions) {\n            if (typeof extension === 'function') {\n                extension = extension(joi);\n            }\n\n            this.assert(extension, Schemas.extension);\n\n            const expanded = internals.expandExtension(extension, joi);\n            for (const item of expanded) {\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\n\n                const base = item.base || this.any();\n                const schema = Extend.type(base, item);\n\n                joi._types.add(item.type);\n                joi[item.type] = function (...args) {\n\n                    return internals.generate(this, schema, args);\n                };\n            }\n        }\n\n        return joi;\n    }]",
        "isError": "[isError(err) {\n\n        return err instanceof exports.ValidationError;\n    }]",
        "isExpression": "[isTemplate(template) {\n\n        return template ? !!template[Common.symbols.template] : false;\n    }]",
        "isRef": function (ref) {\n\n    return ref ? !!ref[Common.symbols.ref] : false;\n},
        "isSchema": function (schema, options = {}) {\n\n    const any = schema && schema[exports.symbols.any];\n    if (!any) {\n        return false;\n    }\n\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\n    return true;\n},
        "in": "[in(...args) {\n\n        return Ref.in(...args);\n    }]",
        "override": Symbol(override),
        "ref": "[ref(...args) {\n\n        return Ref.create(...args);\n    }]",
        "types": "[types() {\n\n        const types = {};\n        for (const type of this._types) {\n            types[type] = this[type]();\n        }\n\n        for (const target in internals.aliases) {\n            types[target] = this[target]();\n        }\n\n        return types;\n    }]",
        "alt": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "bool": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "func": function (...args) {\n\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\n            return internals.generate(this, internals.types[type], args);\n        },
        "x": "[expression(...args) {\n\n        return new Template(...args);\n    }]",
        "trace": function () {\n\n        root._tracer = root._tracer || new internals.Tracer();\n        return root._tracer;\n    },
        "untrace": () => {\n\n        root._tracer = null;\n    }
      },
      "$_temp": {
        "ruleset": false,
        "whens": {}
      },
      "_ids": {
        "_byId": {},
        "_byKey": {},
        "_schemaChain": false
      },
      "_preferences": null,
      "_valids": null,
      "_invalids": null,
      "_rules": [],
      "_singleRules": {},
      "_refs": {
        "refs": []
      },
      "_flags": {
        "presence": "required"
      },
      "_cache": null,
      "$_terms": {
        "alterations": null,
        "examples": null,
        "externals": null,
        "metas": [],
        "notes": [],
        "shared": null,
        "tags": [],
        "whens": null,
        "replacements": null
      },
      "$_super": {}
    }
  }
}
[31m
[1] "body" must be a Joi schema of any type[0m
    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)
    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)
    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)
    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)
    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)
    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)
    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"{\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m","_original":{"body":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}}},"details":[{"message":"\"body\" must be a Joi schema of any type","path":["body"],"type":"object.schema","context":{"type":"any","label":"body","value":{"refreshToken":{"type":"string","$_root":{"_types":{},"version":"17.11.0","cache":{}},"$_temp":{"ruleset":false,"whens":{}},"_ids":{"_byId":{},"_byKey":{},"_schemaChain":false},"_preferences":null,"_valids":null,"_invalids":null,"_rules":[],"_singleRules":{},"_refs":{"refs":[]},"_flags":{"presence":"required"},"_cache":null,"$_terms":{"alterations":null,"examples":null,"externals":null,"metas":[],"notes":[],"shared":null,"tags":[],"whens":null,"replacements":null},"$_super":{}}},"key":"body"}}]},"level":"error","message":"uncaughtException: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\nValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ValidationError: {\n  \"body\" \u001b[31m[1]\u001b[0m: {\n    \"refreshToken\": {\n      \"type\": \"string\",\n      \"$_root\": {\n        \"_types\": {},\n        \"alternatives\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"any\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"array\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"boolean\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"date\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"function\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"link\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"number\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"object\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"string\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"symbol\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"binary\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"allow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"custom\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"disallow\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"equal\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"exist\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"forbidden\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"invalid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"not\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"only\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"optional\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"options\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"prefs\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"preferences\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"required\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"strip\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"valid\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"when\": function (...args) {\\n\\n            return this.any()[method](...args);\\n        },\n        \"ValidationError\": \"[class extends Error {\\n\\n    constructor(message, details, original) {\\n\\n        super(message);\\n        this._original = original;\\n        this.details = details;\\n    }\\n\\n    static isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }\\n}]\",\n        \"version\": \"17.11.0\",\n        \"cache\": {\n          \"provision\": \"[provision(options) {\\n\\n        return new internals.Cache(options);\\n    }]\"\n        },\n        \"assert\": \"[assert(value, schema, ...args /* [message], [options] */) {\\n\\n        internals.assert(value, schema, true, args);\\n    }]\",\n        \"attempt\": \"[attempt(value, schema, ...args /* [message], [options] */) {\\n\\n        return internals.assert(value, schema, false, args);\\n    }]\",\n        \"build\": \"[build(desc) {\\n\\n        Assert(typeof Manifest.build === 'function', 'Manifest functionality disabled');\\n        return Manifest.build(this, desc);\\n    }]\",\n        \"checkPreferences\": \"[checkPreferences(prefs) {\\n\\n        Common.checkPreferences(prefs);\\n    }]\",\n        \"compile\": \"[compile(schema, options) {\\n\\n        return Compile.compile(this, schema, options);\\n    }]\",\n        \"defaults\": \"[defaults(modifier) {\\n\\n        Assert(typeof modifier === 'function', 'modifier must be a function');\\n\\n        const joi = Object.assign({}, this);\\n        for (const type of joi._types) {\\n            const schema = modifier(joi[type]());\\n            Assert(Common.isSchema(schema), 'modifier must return a valid schema object');\\n\\n            joi[type] = function (...args) {\\n\\n                return internals.generate(this, schema, args);\\n            };\\n        }\\n\\n        return joi;\\n    }]\",\n        \"expression\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"extend\": \"[extend(...extensions) {\\n\\n        Common.verifyFlat(extensions, 'extend');\\n\\n        Schemas = Schemas || require('./schemas');\\n\\n        Assert(extensions.length, 'You need to provide at least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function (...args) {\\n\\n                    return internals.generate(this, schema, args);\\n                };\\n            }\\n        }\\n\\n        return joi;\\n    }]\",\n        \"isError\": \"[isError(err) {\\n\\n        return err instanceof exports.ValidationError;\\n    }]\",\n        \"isExpression\": \"[isTemplate(template) {\\n\\n        return template ? !!template[Common.symbols.template] : false;\\n    }]\",\n        \"isRef\": function (ref) {\\n\\n    return ref ? !!ref[Common.symbols.ref] : false;\\n},\n        \"isSchema\": function (schema, options = {}) {\\n\\n    const any = schema && schema[exports.symbols.any];\\n    if (!any) {\\n        return false;\\n    }\\n\\n    Assert(options.legacy || any.version === exports.version, 'Cannot mix different versions of joi schemas');\\n    return true;\\n},\n        \"in\": \"[in(...args) {\\n\\n        return Ref.in(...args);\\n    }]\",\n        \"override\": Symbol(override),\n        \"ref\": \"[ref(...args) {\\n\\n        return Ref.create(...args);\\n    }]\",\n        \"types\": \"[types() {\\n\\n        const types = {};\\n        for (const type of this._types) {\\n            types[type] = this[type]();\\n        }\\n\\n        for (const target in internals.aliases) {\\n            types[target] = this[target]();\\n        }\\n\\n        return types;\\n    }]\",\n        \"alt\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"bool\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"func\": function (...args) {\\n\\n            Assert(!args.length || ['alternatives', 'link', 'object'].includes(type), 'The', type, 'type does not allow arguments');\\n            return internals.generate(this, internals.types[type], args);\\n        },\n        \"x\": \"[expression(...args) {\\n\\n        return new Template(...args);\\n    }]\",\n        \"trace\": function () {\\n\\n        root._tracer = root._tracer || new internals.Tracer();\\n        return root._tracer;\\n    },\n        \"untrace\": () => {\\n\\n        root._tracer = null;\\n    }\n      },\n      \"$_temp\": {\n        \"ruleset\": false,\n        \"whens\": {}\n      },\n      \"_ids\": {\n        \"_byId\": {},\n        \"_byKey\": {},\n        \"_schemaChain\": false\n      },\n      \"_preferences\": null,\n      \"_valids\": null,\n      \"_invalids\": null,\n      \"_rules\": [],\n      \"_singleRules\": {},\n      \"_refs\": {\n        \"refs\": []\n      },\n      \"_flags\": {\n        \"presence\": \"required\"\n      },\n      \"_cache\": null,\n      \"$_terms\": {\n        \"alterations\": null,\n        \"examples\": null,\n        \"externals\": null,\n        \"metas\": [],\n        \"notes\": [],\n        \"shared\": null,\n        \"tags\": [],\n        \"whens\": null,\n        \"replacements\": null\n      },\n      \"$_super\": {}\n    }\n  }\n}\n\u001b[31m\n[1] \"body\" must be a Joi schema of any type\u001b[0m\n    at Object.exports.process (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js:193:16)\n    at Object.internals.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:250:26)\n    at Object.exports.entry (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js:27:30)\n    at internals.Base.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js:548:26)\n    at Object.internals.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:225:27)\n    at Object.assert (/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js:102:19)\n    at exports.validate (/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js:12:7)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js:12:11)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:35:39 GMT+0700 (Indochina Time)","process":{"pid":93314,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59604992,"heapTotal":22200320,"heapUsed":14602904,"external":2777753,"arrayBuffers":107906}},"os":{"loadavg":[5.65869140625,4.23193359375,3.84619140625],"uptime":726014},"trace":[{"column":null,"file":null,"function":"least one extension');\\n        this.assert(extensions, Schemas.extensions);\\n\\n        const joi = Object.assign({}, this);\\n        joi._types = new Set(joi._types);\\n\\n        for (let extension of extensions) {\\n            if (typeof extension === 'function') {\\n                extension = extension(joi);\\n            }\\n\\n            this.assert(extension, Schemas.extension);\\n\\n            const expanded = internals.expandExtension(extension, joi);\\n            for (const item of expanded) {\\n                Assert(joi[item.type] === undefined || joi._types.has(item.type), 'Cannot override name', item.type);\\n\\n                const base = item.base || this.any();\\n                const schema = Extend.type(base, item);\\n\\n                joi._types.add(item.type);\\n                joi[item.type] = function","line":null,"method":"type] = function","native":false},{"column":16,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/errors.js","function":"Object.exports.process","line":193,"method":"process","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.internals.entry","line":250,"method":"entry","native":false},{"column":30,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/validator.js","function":"Object.exports.entry","line":27,"method":"entry","native":false},{"column":26,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/base.js","function":"internals.Base.validate","line":548,"method":"validate","native":false},{"column":27,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.internals.assert","line":225,"method":"assert","native":false},{"column":19,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/joi/lib/index.js","function":"Object.assert","line":102,"method":"assert","native":false},{"column":7,"file":"/Users/seo/Desktop/interview-home-work/api/node_modules/express-validation/lib/index.js","function":"exports.validate","line":12,"method":"validate","native":false},{"column":11,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/auth/auth.route.js","function":null,"line":12,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:35:39"}
2023-11-10 08:37:00 error: uncaughtException: ev.options is not a function
TypeError: ev.options is not a function
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"ev.options is not a function"},"level":"error","message":"uncaughtException: ev.options is not a function\nTypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:37:00 GMT+0700 (Indochina Time)","process":{"pid":93354,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58523648,"heapTotal":22200320,"heapUsed":14544288,"external":2785945,"arrayBuffers":116098}},"os":{"loadavg":[3.740234375,3.8564453125,3.7294921875],"uptime":726095},"trace":[{"column":4,"file":"/Users/seo/Desktop/interview-home-work/api/app/app.js","function":null,"line":13,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/index.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:37:00"}
2023-11-10 08:37:05 error: uncaughtException: ev.options is not a function
TypeError: ev.options is not a function
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"ev.options is not a function"},"level":"error","message":"uncaughtException: ev.options is not a function\nTypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:37:05 GMT+0700 (Indochina Time)","process":{"pid":93363,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58621952,"heapTotal":22200320,"heapUsed":14609088,"external":2785945,"arrayBuffers":123608}},"os":{"loadavg":[3.6806640625,3.841796875,3.72509765625],"uptime":726100},"trace":[{"column":4,"file":"/Users/seo/Desktop/interview-home-work/api/app/app.js","function":null,"line":13,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/index.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:37:05"}
2023-11-10 08:37:17 error: uncaughtException: ev.options is not a function
TypeError: ev.options is not a function
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"ev.options is not a function"},"level":"error","message":"uncaughtException: ev.options is not a function\nTypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:37:17 GMT+0700 (Indochina Time)","process":{"pid":93380,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":61292544,"heapTotal":30851072,"heapUsed":14613968,"external":2785945,"arrayBuffers":50326}},"os":{"loadavg":[5.90087890625,4.34912109375,3.9091796875],"uptime":726112},"trace":[{"column":4,"file":"/Users/seo/Desktop/interview-home-work/api/app/app.js","function":null,"line":13,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/index.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:37:17"}
2023-11-10 08:38:22 error: uncaughtException: Cannot read properties of undefined (reading 'options')
TypeError: Cannot read properties of undefined (reading 'options')
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"TypeError: Cannot read properties of undefined (reading 'options')\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"Cannot read properties of undefined (reading 'options')"},"level":"error","message":"uncaughtException: Cannot read properties of undefined (reading 'options')\nTypeError: Cannot read properties of undefined (reading 'options')\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"TypeError: Cannot read properties of undefined (reading 'options')\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:38:22 GMT+0700 (Indochina Time)","process":{"pid":93425,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":59129856,"heapTotal":30851072,"heapUsed":14537904,"external":2785933,"arrayBuffers":42134}},"os":{"loadavg":[4.57763671875,4.18896484375,3.87548828125],"uptime":726177},"trace":[{"column":4,"file":"/Users/seo/Desktop/interview-home-work/api/app/app.js","function":null,"line":13,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/index.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:38:22"}
2023-11-10 08:38:31 error: uncaughtException: Cannot read properties of undefined (reading 'options')
TypeError: Cannot read properties of undefined (reading 'options')
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"TypeError: Cannot read properties of undefined (reading 'options')\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"Cannot read properties of undefined (reading 'options')"},"level":"error","message":"uncaughtException: Cannot read properties of undefined (reading 'options')\nTypeError: Cannot read properties of undefined (reading 'options')\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"TypeError: Cannot read properties of undefined (reading 'options')\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:38:31 GMT+0700 (Indochina Time)","process":{"pid":93433,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":60080128,"heapTotal":30851072,"heapUsed":14562776,"external":2785933,"arrayBuffers":42134}},"os":{"loadavg":[4.37109375,4.15234375,3.8642578125],"uptime":726186},"trace":[{"column":4,"file":"/Users/seo/Desktop/interview-home-work/api/app/app.js","function":null,"line":13,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/index.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:38:31"}
2023-11-10 08:39:29 error: uncaughtException: ev.options is not a function
TypeError: ev.options is not a function
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"ev.options is not a function"},"level":"error","message":"uncaughtException: ev.options is not a function\nTypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"TypeError: ev.options is not a function\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/app.js:13:4)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/index.js:2:14)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 08:39:29 GMT+0700 (Indochina Time)","process":{"pid":93462,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":60489728,"heapTotal":30851072,"heapUsed":14719424,"external":2785933,"arrayBuffers":42134}},"os":{"loadavg":[2.8623046875,3.80517578125,3.7548828125],"uptime":726244},"trace":[{"column":4,"file":"/Users/seo/Desktop/interview-home-work/api/app/app.js","function":null,"line":13,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":14,"file":"/Users/seo/Desktop/interview-home-work/api/index.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 08:39:29"}
2023-11-10 11:27:30 error: uncaughtException: Cannot find module './user.controller'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
Error: Cannot find module './user.controller'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19) 
	Stack: {"error":{"stack":"Error: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","message":"Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js","code":"MODULE_NOT_FOUND","requireStack":["/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","/Users/seo/Desktop/interview-home-work/api/app/app.js","/Users/seo/Desktop/interview-home-work/api/index.js"]},"level":"error","message":"uncaughtException: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\nError: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","stack":"Error: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","exception":true,"date":"Fri Nov 10 2023 11:27:30 GMT+0700 (Indochina Time)","process":{"pid":99985,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58949632,"heapTotal":19578880,"heapUsed":14690048,"external":2611638,"arrayBuffers":284074}},"os":{"loadavg":[3.04248046875,3.08935546875,3.29638671875],"uptime":736325},"trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":933,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":24,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false}],"timestamp":"2023-11-10 11:27:30"}
2023-11-10 11:27:41 error: uncaughtException: Cannot find module './user.controller'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
Error: Cannot find module './user.controller'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19) 
	Stack: {"error":{"stack":"Error: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","message":"Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js","code":"MODULE_NOT_FOUND","requireStack":["/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","/Users/seo/Desktop/interview-home-work/api/app/app.js","/Users/seo/Desktop/interview-home-work/api/index.js"]},"level":"error","message":"uncaughtException: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\nError: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","stack":"Error: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","exception":true,"date":"Fri Nov 10 2023 11:27:41 GMT+0700 (Indochina Time)","process":{"pid":103,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58638336,"heapTotal":19841024,"heapUsed":14721232,"external":2611638,"arrayBuffers":278886}},"os":{"loadavg":[3.6826171875,3.21875,3.33935546875],"uptime":736336},"trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":933,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":24,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false}],"timestamp":"2023-11-10 11:27:41"}
2023-11-10 11:27:54 error: uncaughtException: Cannot find module './user.controller'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
Error: Cannot find module './user.controller'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19) 
	Stack: {"error":{"stack":"Error: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","message":"Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js","code":"MODULE_NOT_FOUND","requireStack":["/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","/Users/seo/Desktop/interview-home-work/api/app/app.js","/Users/seo/Desktop/interview-home-work/api/index.js"]},"level":"error","message":"uncaughtException: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\nError: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","stack":"Error: Cannot find module './user.controller'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js:2:24)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","exception":true,"date":"Fri Nov 10 2023 11:27:54 GMT+0700 (Indochina Time)","process":{"pid":117,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58228736,"heapTotal":19841024,"heapUsed":14798720,"external":2603446,"arrayBuffers":270694}},"os":{"loadavg":[3.57421875,3.22265625,3.337890625],"uptime":736349},"trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":933,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":24,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","function":null,"line":2,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false}],"timestamp":"2023-11-10 11:27:54"}
2023-11-10 11:27:59 error: uncaughtException: Cannot find module './user.service'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
Error: Cannot find module './user.service'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19) 
	Stack: {"error":{"stack":"Error: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","message":"Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js","code":"MODULE_NOT_FOUND","requireStack":["/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","/Users/seo/Desktop/interview-home-work/api/app/app.js","/Users/seo/Desktop/interview-home-work/api/index.js"]},"level":"error","message":"uncaughtException: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\nError: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","stack":"Error: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","exception":true,"date":"Fri Nov 10 2023 11:27:59 GMT+0700 (Indochina Time)","process":{"pid":125,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":57933824,"heapTotal":19841024,"heapUsed":14668752,"external":2611638,"arrayBuffers":278886}},"os":{"loadavg":[3.52783203125,3.21875,3.33544921875],"uptime":736354},"trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":933,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":21,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","function":null,"line":1,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false}],"timestamp":"2023-11-10 11:27:59"}
2023-11-10 11:28:12 error: uncaughtException: Cannot find module './user.service'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
Error: Cannot find module './user.service'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19) 
	Stack: {"error":{"stack":"Error: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","message":"Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js","code":"MODULE_NOT_FOUND","requireStack":["/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","/Users/seo/Desktop/interview-home-work/api/app/app.js","/Users/seo/Desktop/interview-home-work/api/index.js"]},"level":"error","message":"uncaughtException: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\nError: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","stack":"Error: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","exception":true,"date":"Fri Nov 10 2023 11:28:12 GMT+0700 (Indochina Time)","process":{"pid":134,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58949632,"heapTotal":21676032,"heapUsed":12724064,"external":2611638,"arrayBuffers":50326}},"os":{"loadavg":[3.04150390625,3.1259765625,3.2998046875],"uptime":736367},"trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":933,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":21,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","function":null,"line":1,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false}],"timestamp":"2023-11-10 11:28:12"}
2023-11-10 11:28:17 error: uncaughtException: Cannot find module './user.service'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
Error: Cannot find module './user.service'
Require stack:
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js
- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js
- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js
- /Users/seo/Desktop/interview-home-work/api/app/app.js
- /Users/seo/Desktop/interview-home-work/api/index.js
    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)
    at Function.Module._load (node:internal/modules/cjs/loader:778:27)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19) 
	Stack: {"error":{"stack":"Error: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","message":"Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js","code":"MODULE_NOT_FOUND","requireStack":["/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js","/Users/seo/Desktop/interview-home-work/api/app/index.routes.js","/Users/seo/Desktop/interview-home-work/api/app/app.js","/Users/seo/Desktop/interview-home-work/api/index.js"]},"level":"error","message":"uncaughtException: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\nError: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","stack":"Error: Cannot find module './user.service'\nRequire stack:\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js\n- /Users/seo/Desktop/interview-home-work/api/app/modules/post/post.route.js\n- /Users/seo/Desktop/interview-home-work/api/app/index.routes.js\n- /Users/seo/Desktop/interview-home-work/api/app/app.js\n- /Users/seo/Desktop/interview-home-work/api/index.js\n    at Function.Module._resolveFilename (node:internal/modules/cjs/loader:933:15)\n    at Function.Module._load (node:internal/modules/cjs/loader:778:27)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)","exception":true,"date":"Fri Nov 10 2023 11:28:17 GMT+0700 (Indochina Time)","process":{"pid":140,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":55820288,"heapTotal":19841024,"heapUsed":14835192,"external":2611638,"arrayBuffers":273913}},"os":{"loadavg":[2.8779296875,3.09033203125,3.2861328125],"uptime":736372},"trace":[{"column":15,"file":"node:internal/modules/cjs/loader","function":"Module._resolveFilename","line":933,"method":"_resolveFilename","native":false},{"column":27,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":778,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":21,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","function":null,"line":1,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false}],"timestamp":"2023-11-10 11:28:17"}
2023-11-10 11:29:04 error: uncaughtException: detail is not defined
ReferenceError: detail is not defined
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ReferenceError: detail is not defined\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"detail is not defined"},"level":"error","message":"uncaughtException: detail is not defined\nReferenceError: detail is not defined\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ReferenceError: detail is not defined\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 11:29:04 GMT+0700 (Indochina Time)","process":{"pid":200,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":57344000,"heapTotal":19841024,"heapUsed":14865000,"external":2611638,"arrayBuffers":278886}},"os":{"loadavg":[2.8466796875,3.05908203125,3.2626953125],"uptime":736419},"trace":[{"column":5,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js","function":null,"line":38,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":21,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","function":null,"line":1,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 11:29:04"}
2023-11-10 11:57:53 error: uncaughtException: getList is not defined
ReferenceError: getList is not defined
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)
    at Module.load (node:internal/modules/cjs/loader:981:32)
    at Function.Module._load (node:internal/modules/cjs/loader:822:12)
    at Module.require (node:internal/modules/cjs/loader:1005:19)
    at require (node:internal/modules/cjs/helpers:102:18)
    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)
    at Module._compile (node:internal/modules/cjs/loader:1105:14)
    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10) 
	Stack: {"error":{"stack":"ReferenceError: getList is not defined\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","message":"getList is not defined"},"level":"error","message":"uncaughtException: getList is not defined\nReferenceError: getList is not defined\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","stack":"ReferenceError: getList is not defined\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js:38:5)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)\n    at Module.load (node:internal/modules/cjs/loader:981:32)\n    at Function.Module._load (node:internal/modules/cjs/loader:822:12)\n    at Module.require (node:internal/modules/cjs/loader:1005:19)\n    at require (node:internal/modules/cjs/helpers:102:18)\n    at Object.<anonymous> (/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js:1:21)\n    at Module._compile (node:internal/modules/cjs/loader:1105:14)\n    at Object.Module._extensions..js (node:internal/modules/cjs/loader:1159:10)","exception":true,"date":"Fri Nov 10 2023 11:57:53 GMT+0700 (Indochina Time)","process":{"pid":1679,"uid":501,"gid":20,"cwd":"/Users/seo/Desktop/interview-home-work/api","execPath":"/usr/local/bin/node","version":"v16.16.0","argv":["/usr/local/bin/node","/Users/seo/Desktop/interview-home-work/api/index.js"],"memoryUsage":{"rss":58441728,"heapTotal":21413888,"heapUsed":12670264,"external":2611638,"arrayBuffers":42134}},"os":{"loadavg":[2.8701171875,3.220703125,3.3095703125],"uptime":738148},"trace":[{"column":5,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.service.js","function":null,"line":38,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false},{"column":32,"file":"node:internal/modules/cjs/loader","function":"Module.load","line":981,"method":"load","native":false},{"column":12,"file":"node:internal/modules/cjs/loader","function":"Module._load","line":822,"method":"_load","native":false},{"column":19,"file":"node:internal/modules/cjs/loader","function":"Module.require","line":1005,"method":"require","native":false},{"column":18,"file":"node:internal/modules/cjs/helpers","function":"require","line":102,"method":null,"native":false},{"column":21,"file":"/Users/seo/Desktop/interview-home-work/api/app/modules/post/post.controller.js","function":null,"line":1,"method":null,"native":false},{"column":14,"file":"node:internal/modules/cjs/loader","function":"Module._compile","line":1105,"method":"_compile","native":false},{"column":10,"file":"node:internal/modules/cjs/loader","function":"Module._extensions..js","line":1159,"method":".js","native":false}],"timestamp":"2023-11-10 11:57:53"}
